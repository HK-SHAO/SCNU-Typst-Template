@misc{wang2024guiding,
      title={Guiding Large Language Models to Generate Computer-Parsable Content}, 
      author={Jiaye Wang},
      year={2024},
      eprint={2404.05499},
      archivePrefix={arXiv},
      primaryClass={cs.SE}
}

@book{Lundberg2024guidance,
  title  = {guidance-ai/guidance},
  url    = {https://github.com/guidance-ai/guidance},
  author = {Lundberg, Scott and Ribeiro, Marco Tulio Correia and Edgar, Richard and Harsha-Nori and Cooper, Hudson and Markus and Koch, Paul and Marawan and cpcdoy and h-k-nyosu and Viggiano, David and sam rodriguez and Zivontsis, Shawn and Mihai and Rafael, João and X, Holden and Bell, Adam Gordon and Amemiya, Riya and SimFG and Nguyen, Andrew Minh and AnilTuraga and Heiner, Nick and Popan, Flavius and Setti, Rodrigo and Delaney, Ryan and Guha, Satarupa and O'Hare, Shawn and Jiang, Shilong and tcheng and Wang, Tianshu},
  date   = {2024-03-20},
  year   = {2024},
  month  = {3},
  day    = {20}
}


@article{radford2018improving,
  added-at  = {2020-07-14T16:37:42.000+0200},
  author    = {Radford, Alec and Narasimhan, Karthik and Salimans, Tim and Sutskever, Ilya},
  biburl    = {https://www.bibsonomy.org/bibtex/273ced32c0d4588eb95b6986dc2c8147c/jonaskaiser},
  interhash = {5c343ed9a31ac52fd17a898f72af228f},
  intrahash = {73ced32c0d4588eb95b6986dc2c8147c},
  keywords  = {final thema:transformer},
  timestamp = {2020-07-14T16:49:42.000+0200},
  title     = {Improving language understanding by generative pre-training},
  year      = 2018
}


@misc{yao2023react,
  title         = {ReAct: Synergizing Reasoning and Acting in Language Models},
  author        = {Shunyu Yao and Jeffrey Zhao and Dian Yu and Nan Du and Izhak Shafran and Karthik Narasimhan and Yuan Cao},
  year          = {2023},
  eprint        = {2210.03629},
  archiveprefix = {arXiv},
  primaryclass  = {cs.CL}
}



@inproceedings{Scholak2021:PICARD,
  author    = {Torsten Scholak and Nathan Schucher and Dzmitry Bahdanau},
  title     = {{PICARD}: Parsing Incrementally for Constrained Auto-Regressive Decoding from Language Models},
  booktitle = {Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing},
  month     = nov,
  year      = {2021},
  publisher = {Association for Computational Linguistics},
  url       = {https://aclanthology.org/2021.emnlp-main.779},
  pages     = {9895--9901}
}


@misc{OpenAIFunctionCalling2024,
  title        = {Function Calling: Learn how to connect large language models to external tools},
  author       = {OpenAI},
  year         = {2024},
  howpublished = {\url{https://platform.openai.com/docs/guides/function-calling}},
  note         = {Accessed: 2024-03-20}
}

@misc{openaiJsonVsFunction2024,
  title        = {OpenAI JSON Mode vs Functions},
  author       = {João Lages},
  year         = {2024},
  howpublished = {\url{https://pub.towardsai.net/openai-json-mode-vs-functions-92b15baa38d9}},
  note         = {Accessed: 2024-03-20}
}

@article{wang2023grammar,
  title   = {Grammar prompting for domain-specific language generation with large language models},
  author  = {Wang, Bailin and Wang, Zi and Wang, Xuezhi and Cao, Yuan and A Saurous, Rif and Kim, Yoon},
  journal = {Advances in Neural Information Processing Systems},
  volume  = {36},
  year    = {2024}
}

@book{Wolf2024huggingface,
  title  = {huggingface/transformers},
  url    = {https://github.com/huggingface/transformers},
  author = {Wolf, Thomas and Gugger, Sylvain and Debut, Lysandre and Yih-Dar and von Platen, Patrick and Bekman, Stas and Chaumond, Julien and Gante, Joao and Shleifer, Sam and Belkada, Younes and Matt and NielsRogge and Arthur and Patry, Nicolas and Patil, Suraj and SANH, Victor and amyeroberts and Romero, Manuel and Morgan, Funtowicz and Gandhi, Sanchit and Plu, Julien and Liu, Steven and Mueller, Zach and Augustin, Aymeric and Schweter, Stefan and Louf, Rémi and dependabot[bot] and Mangrulkar, Sourab and Denis and Dirik, Alara},
  date   = {2024-03-20},
  year   = {2024},
  month  = {3},
  day    = {20}
}

@book{Baccianella2024mangiucugna,
  title  = {mangiucugna/json_repair},
  url    = {https://github.com/mangiucugna/json_repair},
  author = {Baccianella, Stefano and Powley, Brett and Terry},
  date   = {2024-03-10},
  year   = {2024},
  month  = {3},
  day    = {10}
}

@book{Kwon2024vllm,
  title  = {vllm-project/vllm},
  url    = {https://github.com/vllm-project/vllm},
  author = {Kwon, Woosuk and Li, Zhuohan and Baum, Antoni and Mo, Simon and Roy and Moritz, Philipp and Hill, Nick and ljss and Liu, Lily and 陈序 and Sun, Wen and Schaffer, Ronen and Daniel, Cade and Yang, Hongxia and youkaichao and Mellor, Harry and zhaoyang-star and Lu, Ricardo and Qing and Pronesti, Massimiliano and Allen.Dou and He, Tao and twaka and Shaw, Robert and (汪然), Wang Ran and Chen, Liangfu and Tianxiang, CHU and zspo and Bai, Yunfeng and Terry},
  date   = {2024-03-20},
  year   = {2024},
  month  = {3},
  day    = {20}
}

@misc{geng2024grammarconstrained,
  title         = {Grammar-Constrained Decoding for Structured NLP Tasks without Finetuning},
  author        = {Saibo Geng and Martin Josifoski and Maxime Peyrard and Robert West},
  year          = {2024},
  eprint        = {2305.13971},
  archiveprefix = {arXiv},
  primaryclass  = {cs.CL}
}

@book{Shinan2024lark,
  title  = {lark-parser/lark},
  url    = {https://github.com/lark-parser/lark},
  author = {Shinan, Erez and MegaIng and chanicpanic and Malard-Adam, Julien and Chilamkurthy, Sasank and Lannigan, Patrick and Emanuel, Kaspar and konstantin and evandrocoan and Chang, Yuan and Schreiner, Henry and ThatXliner and Rogdham and ornariece and Rydzewski, Jan and Gritsenko, Dmitry and orcharddweller and decorator-factory and Rose, Robert and K., Michael and Lauer, Ken and starwarswii and Y-M, Jonah "Jay" and Raekye and Wienemann, Peter and PJCampi and ldbo and Latimer, Kevin and Mishra, Jitendra and Geng, Gary},
  date   = {2024-03-15},
  year   = {2024},
  month  = {3},
  day    = {15}
}

@misc{lin2024mitigating,
  title         = {Mitigating the Alignment Tax of RLHF},
  author        = {Yong Lin and Hangyu Lin and Wei Xiong and Shizhe Diao and Jianmeng Liu and Jipeng Zhang and Rui Pan and Haoxiang Wang and Wenbin Hu and Hanning Zhang and Hanze Dong and Renjie Pi and Han Zhao and Nan Jiang and Heng Ji and Yuan Yao and Tong Zhang},
  year          = {2024},
  eprint        = {2309.06256},
  archiveprefix = {arXiv},
  primaryclass  = {cs.LG}
}

@book{sammet1969programming,
  title     = {Programming languages: History and fundamentals},
  author    = {Sammet, Jean E},
  year      = {1969},
  publisher = {Prentice-Hall, Inc.}
}

@book{wexelblat1981history,
  title     = {History of programming languages},
  author    = {Wexelblat, Richard L},
  year      = {1981},
  publisher = {Academic Press}
}

@book{Max2024tree,
  doi       = {10.5281/ZENODO.10827268},
  publisher = {Zenodo},
  title     = {tree-sitter/tree-sitter: v0.22.2},
  url       = {https://zenodo.org/doi/10.5281/zenodo.10827268},
  author    = {Max Brunsfeld and Andrew Hlynskyi and Amaan Qureshi and Patrick Thomson and Josh Vera and Phil Turnbull and dundargoc and Timothy Clem and Douglas Creager and Andrew Helwer and Rob Rix and Daumantas Kavolis and ObserverOfTime and Hendrik van Antwerpen and Michael Davis and Ika and Tuấn-Anh Nguyễn and Amin Yahyaabadi and Stafford Brunk and Matt Massicotte and Niranjan Hasabnis and bfredl and Mingkai Dong and Samuel Moelius and Steven Kalt and Kolja and Vladimir Panteleev and Jonathan Arnett and Linda_pp},
  date      = {2024-03-17},
  year      = {2024},
  month     = {3},
  day       = {17}
}

@misc{rfc7159,
  series       = {Request for Comments},
  number       = 7159,
  howpublished = {RFC 7159},
  publisher    = {RFC Editor},
  doi          = {10.17487/RFC7159},
  url          = {https://www.rfc-editor.org/info/rfc7159},
  author       = {Tim Bray},
  title        = {{The JavaScript Object Notation (JSON) Data Interchange Format}},
  pagetotal    = 16,
  year         = 2014,
  month        = mar,
  abstract     = {JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data. This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.}
}

% Datatracker information for RFCs on the Legacy Stream is unfortunately often
% incorrect. Please correct the bibtex below based on the information in the
% actual RFC at https://rfc-editor.org/rfc/rfc2854.txt

@misc{rfc2854,
  series       = {Request for Comments},
  number       = 2854,
  howpublished = {RFC 2854},
  publisher    = {RFC Editor},
  doi          = {10.17487/RFC2854},
  url          = {https://www.rfc-editor.org/info/rfc2854},
  author       = {Larry M Masinter and Daniel W. Connolly},
  title        = {{The 'text/html' Media Type}},
  pagetotal    = 8,
  year         = 2000,
  month        = jun,
  abstract     = {This document summarizes the history of HTML development, and defines the "text/html" MIME type by pointing to the relevant W3C recommendations. This memo provides information for the Internet community.}
}

% Datatracker information for RFCs on the Legacy Stream is unfortunately often
% incorrect. Please correct the bibtex below based on the information in the
% actual RFC at https://rfc-editor.org/rfc/rfc3023.txt

@misc{rfc3023,
  series       = {Request for Comments},
  number       = 3023,
  howpublished = {RFC 3023},
  publisher    = {RFC Editor},
  doi          = {10.17487/RFC3023},
  url          = {https://www.rfc-editor.org/info/rfc3023},
  author       = {Simon St.Laurent and Murata Makoto and Dan Kohn},
  title        = {{XML Media Types}},
  pagetotal    = 39,
  year         = 2001,
  month        = jan,
  abstract     = {This document standardizes five new media types -- text/xml, application/xml, text/xml-external-parsed-entity, application/xml- external-parsed-entity, and application/xml-dtd -- for use in exchanging network entities that are related to the Extensible Markup Language (XML). This document also standardizes a convention (using the suffix '+xml') for naming media types outside of these five types when those media types represent XML MIME (Multipurpose Internet Mail Extensions) entities. {[}STANDARDS-TRACK{]}}
}

@misc{rfc4180,
  series       = {Request for Comments},
  number       = 4180,
  howpublished = {RFC 4180},
  publisher    = {RFC Editor},
  doi          = {10.17487/RFC4180},
  url          = {https://www.rfc-editor.org/info/rfc4180},
  author       = {Yakov Shafranovich},
  title        = {{Common Format and MIME Type for Comma-Separated Values (CSV) Files}},
  pagetotal    = 8,
  year         = 2005,
  month        = oct,
  abstract     = {This RFC documents the format used for Comma-Separated Values (CSV) files and registers the associated MIME type "text/csv". This memo provides information for the Internet community.}
}

@software{Sveidqvist2014,
  author          = {Sveidqvist, Knut and Contributors to Mermaid},
  title           = {Mermaid: Generate diagrams from markdown-like text},
  type            = {software},
  version         = {},
  date            = {2014-12-02},
  url             = {https://mermaid.js.org/},
  abstract        = {JavaScript based diagramming and charting tool that renders Markdown-inspired text definitions to create and modify diagrams dynamically.},
  license         = {MIT},
  repository-code = {https://github.com/mermaid-js/mermaid}
}

@article{weininger1988smiles,
  title     = {SMILES, a chemical language and information system. 1. Introduction to methodology and encoding rules},
  author    = {Weininger, David},
  journal   = {Journal of chemical information and computer sciences},
  volume    = {28},
  number    = {1},
  pages     = {31--36},
  year      = {1988},
  publisher = {ACS Publications}
}

@article{ion1998mathematical,
  title   = {Mathematical Markup Language (MathML) Version 3.0},
  author  = {Ion, Patrick and Miner, Robert and Ausbrooks, Ron and Buswell, Stephen and Carlisle, David and Chavchanidze, Giorgi and St{\'e}phaneDalmas, StanDevitt and AngelDiaz, SamDooley and RogerHunter, PatrickIon and Kohlhase, Michael and others},
  journal = {World Wide Web Consortium},
  year    = {1998}
}

@article{o2018deepsmiles,
  title  = {DeepSMILES: an adaptation of SMILES for use in machine-learning of chemical structures},
  author = {O'Boyle, Noel and Dalke, Andrew},
  year   = {2018}
}

@misc{rfc2045,
  series       = {Request for Comments},
  number       = 2045,
  howpublished = {RFC 2045},
  publisher    = {RFC Editor},
  doi          = {10.17487/RFC2045},
  url          = {https://www.rfc-editor.org/info/rfc2045},
  author       = {Ned Freed and Dr. Nathaniel S. Borenstein},
  title        = {{Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies}},
  pagetotal    = 31,
  year         = 1996,
  month        = nov,
  abstract     = {This initial document specifies the various headers used to describe the structure of MIME messages. {[}STANDARDS-TRACK{]}}
}

@book{Vandermeersch2021opensmiles,
  title  = {opensmiles/OpenSMILES},
  url    = {https://github.com/opensmiles/OpenSMILES},
  author = {Vandermeersch, Tim and Mayfield, John and Hutchison, Geoff and Willighagen, Egon and Votapka, Lane and Holy, Tim and Lowe, Daniel and philthiel},
  date   = {2021-09-21},
  year   = {2021},
  month  = {9},
  day    = {21}
}

@article{Singhal_2023,
  title     = {Q# as a Quantum Algorithmic Language},
  volume    = {394},
  issn      = {2075-2180},
  url       = {http://dx.doi.org/10.4204/EPTCS.394.10},
  doi       = {10.4204/eptcs.394.10},
  journal   = {Electronic Proceedings in Theoretical Computer Science},
  publisher = {Open Publishing Association},
  author    = {Singhal, Kartik and Hietala, Kesha and Marshall, Sarah and Rand, Robert},
  year      = {2023},
  month     = nov,
  pages     = {170–191}
}

@article{OFER20211750,
  title    = {The language of proteins: NLP, machine learning & protein sequences},
  journal  = {Computational and Structural Biotechnology Journal},
  volume   = {19},
  pages    = {1750-1758},
  year     = {2021},
  issn     = {2001-0370},
  doi      = {https://doi.org/10.1016/j.csbj.2021.03.022},
  url      = {https://www.sciencedirect.com/science/article/pii/S2001037021000945},
  author   = {Dan Ofer and Nadav Brandes and Michal Linial},
  keywords = {Natural language processing, Deep learning, Language models, BERT, Bag of words, Tokenization, Word embedding, Contextualized embedding, Transformer, Artificial neural networks, Word2vec, Bioinformatics},
  abstract = {Natural language processing (NLP) is a field of computer science concerned with automated text and language analysis. In recent years, following a series of breakthroughs in deep and machine learning, NLP methods have shown overwhelming progress. Here, we review the success, promise and pitfalls of applying NLP algorithms to the study of proteins. Proteins, which can be represented as strings of amino-acid letters, are a natural fit to many NLP methods. We explore the conceptual similarities and differences between proteins and language, and review a range of protein-related tasks amenable to machine learning. We present methods for encoding the information of proteins as text and analyzing it with NLP methods, reviewing classic concepts such as bag-of-words, k-mers/n-grams and text search, as well as modern techniques such as word embedding, contextualized embedding, deep learning and neural language models. In particular, we focus on recent innovations such as masked language modeling, self-supervised learning and attention-based models. Finally, we discuss trends and challenges in the intersection of NLP and protein research.}
}

@article{10.1162_COMJ_a_00324,
  author   = {Wang, Ge and Cook, Perry R. and Salazar, Spencer},
  title    = {{ChucK: A Strongly Timed Computer Music Language}},
  journal  = {Computer Music Journal},
  volume   = {39},
  number   = {4},
  pages    = {10-29},
  year     = {2015},
  month    = {12},
  abstract = {{ChucK is a programming language designed for computer music. It aims to be expressive and straightforward to read and write with respect to time and concurrency, and to provide a platform for precise audio synthesis and analysis and for rapid experimentation in computer music. In particular, ChucK defines the notion of a strongly timed audio programming language, comprising a versatile time-based programming model that allows programmers to flexibly and precisely control the flow of time in code and use the keyword now as a time-aware control construct, and gives programmers the ability to use the timing mechanism to realize sample-accurate concurrent programming. Several case studies are presented that illustrate the workings, properties, and personality of the language. We also discuss applications of ChucK in laptop orchestras, computer music pedagogy, and mobile music instruments. Properties and affordances of the language and its future directions are outlined.}},
  issn     = {0148-9267},
  doi      = {10.1162/COMJ_a_00324},
  url      = {https://doi.org/10.1162/COMJ\_a\_00324},
  eprint   = {https://direct.mit.edu/comj/article-pdf/39/4/10/1953737/comj\_a\_00324.pdf}
}

@book{lazzarini2016csound,
  title     = {Csound: a sound and music computing system},
  author    = {Lazzarini, Victor and Yi, Steven and Heintz, Joachim and Brandtsegg, {\O}yvind and McCurdy, Iain and others},
  year      = {2016},
  publisher = {Springer}
}

@book{bohnacker2012generative,
  title     = {Generative design: visualize, program, and create with processing},
  author    = {Bohnacker, Hartmut and Gross, Benedikt and Laub, Julia and Lazzeroni, Claudius},
  year      = {2012},
  publisher = {Princeton Architectural Press}
}

@phdthesis{madje2022programmable,
  title  = {A Programmable Markup Language for Typesetting},
  author = {M{\"a}dje, Laurenz},
  year   = {2022},
  school = {tu-berlin}
}

@article{team2024gemma,
  title   = {Gemma: Open Models Based on Gemini Research and Technology},
  author  = {Team, Gemma and Mesnard, Thomas and Hardin, Cassidy and Dadashi, Robert and Bhupatiraju, Surya and Pathak, Shreya and Sifre, Laurent and Rivi{\`e}re, Morgane and Kale, Mihir Sanjay and Love, Juliette and others},
  journal = {arXiv preprint arXiv:2403.08295},
  year    = {2024}
}

@article{radford2019language,
  title   = {Language models are unsupervised multitask learners},
  author  = {Radford, Alec and Wu, Jeffrey and Child, Rewon and Luan, David and Amodei, Dario and Sutskever, Ilya and others},
  journal = {OpenAI blog},
  volume  = {1},
  number  = {8},
  pages   = {9},
  year    = {2019}
}

@online{wolfram2023chatgpt,
  author    = {Wolfram, Stephen},
  title     = {What is ChatGPT doing ... and why does it work?},
  year      = {2023},
  url       = {https://writings.stephenwolfram.com/2023/02/what-is-chatgpt-doing-and-why-does-it-work},
  urldate   = {2023-02-14},
  publisher = {Stephen Wolfram Writings}
}

@article{chomsky1956three,
  title     = {Three models for the description of language},
  author    = {Chomsky, Noam},
  journal   = {IRE Transactions on information theory},
  volume    = {2},
  number    = {3},
  pages     = {113--124},
  year      = {1956},
  publisher = {IEEE}
}

@article{MASCARENHAS2014235,
  title    = {On the relation between context-free grammars and parsing expression grammars},
  journal  = {Science of Computer Programming},
  volume   = {89},
  pages    = {235-250},
  year     = {2014},
  issn     = {0167-6423},
  doi      = {https://doi.org/10.1016/j.scico.2014.01.012},
  url      = {https://www.sciencedirect.com/science/article/pii/S0167642314000276},
  author   = {Fabio Mascarenhas and SÃ©rgio Medeiros and Roberto Ierusalimschy},
  keywords = {Context-free grammars, Parsing expression grammars, , , Natural semantics},
  abstract = {Context-Free Grammars (CFGs) and Parsing Expression Grammars (PEGs) have several similarities and a few differences in both their syntax and semantics, but they are usually presented through formalisms that hinder a proper comparison. In this paper we present a new formalism for CFGs that highlights the similarities and differences between them. The new formalism borrows from PEGs the use of parsing expressions and the recognition-based semantics. We show how one way of removing non-determinism from this formalism yields a formalism with the semantics of PEGs. We also prove, based on these new formalisms, how LL(1) grammars define the same language whether interpreted as CFGs or as PEGs, and also show how strong-LL(k), right-linear, and LL-regular grammars have simple language-preserving translations from CFGs to PEGs. Once these classes of CFGs can be automatically translated to equivalent PEGs, we can reuse classic top-down grammars in PEG-based tools.}
}

@online{Burghardt2020,
  author = {Jochen Burghardt},
  title  = {Shows a simplified excerpt of the formal grammar for the C programming language, and a derivation of a piece of C code},
  year   = {2020},
  url    = {https://commons.wikimedia.org/wiki/File:C_grammar_stmt.pdf},
  note   = {Accessed: 2024-3-24}
}

@book{KernighanRitchie1988,
  title     = {The C Programming Language},
  author    = {Brian W. Kernighan and Dennis M. Ritchie},
  year      = {1988},
  edition   = {2nd},
  publisher = {Prentice Hall},
  series    = {Prentice Hall Software Series},
  address   = {Englewood Cliffs/NJ},
  isbn      = {0131103628},
  note      = {Here: App.A}
}

@misc{rfc5234,
  series       = {Request for Comments},
  number       = 5234,
  howpublished = {RFC 5234},
  publisher    = {RFC Editor},
  doi          = {10.17487/RFC5234},
  url          = {https://www.rfc-editor.org/info/rfc5234},
  author       = {Dave Crocker and Paul Overell},
  title        = {{Augmented BNF for Syntax Specifications: ABNF}},
  pagetotal    = 16,
  year         = 2008,
  month        = jan,
  abstract     = {Internet technical specifications often need to define a formal syntax. Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications. The current specification documents ABNF. It balances compactness and simplicity with reasonable representational power. The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges. This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications. {[}STANDARDS-TRACK{]}}
}

@misc{newystats2019exponential,
  author       = {Newystats},
  title        = {Plot of the probability density function of the exponential distribution},
  year         = {2019},
  howpublished = {\url{https://commons.wikimedia.org/wiki/File:Exponential_probability_density.svg}},
  note         = {[Accessed: 2024-3-25]}
}

@article{achiam2023gpt,
  title   = {GPT-4 technical report},
  author  = {Achiam, Josh and Adler, Steven and Agarwal, Sandhini and Ahmad, Lama and Akkaya, Ilge and Aleman, Florencia Leoni and Almeida, Diogo and Altenschmidt, Janko and Altman, Sam and Anadkat, Shyamal and others},
  journal = {arXiv preprint arXiv:2303.08774},
  year    = {2023}
}

@article{touvron2023llama,
  title   = {Llama 2: Open foundation and fine-tuned chat models},
  author  = {Touvron, Hugo and Martin, Louis and Stone, Kevin and Albert, Peter and Almahairi, Amjad and Babaei, Yasmine and Bashlykov, Nikolay and Batra, Soumya and Bhargava, Prajjwal and Bhosale, Shruti and others},
  journal = {arXiv preprint arXiv:2307.09288},
  year    = {2023}
}


@inproceedings{wang2023cost,
  title        = {Cost-effective hyperparameter optimization for large language model generation inference},
  author       = {Wang, Chi and Liu, Xueqing and Awadallah, Ahmed Hassan},
  booktitle    = {International Conference on Automated Machine Learning},
  pages        = {21--1},
  year         = {2023},
  organization = {PMLR}
}

@article{renze2024effect,
  title   = {The Effect of Sampling Temperature on Problem Solving in Large Language Models},
  author  = {Renze, Matthew and Guven, Erhan},
  journal = {arXiv preprint arXiv:2402.05201},
  year    = {2024}
}

@misc{rfc2616,
  series       = {Request for Comments},
  number       = 2616,
  howpublished = {RFC 2616},
  publisher    = {RFC Editor},
  doi          = {10.17487/RFC2616},
  url          = {https://www.rfc-editor.org/info/rfc2616},
  author       = {Henrik Nielsen and Jeffrey Mogul and Larry M Masinter and Roy T. Fielding and Jim Gettys and Paul J. Leach and Tim Berners-Lee},
  title        = {{Hypertext Transfer Protocol -- HTTP/1.1}},
  pagetotal    = 176,
  year         = 1999,
  month        = jun,
  abstract     = {HTTP has been in use by the World-Wide Web global information initiative since 1990. This specification defines the protocol referred to as "HTTP/1.1", and is an update to RFC 2068. {[}STANDARDS-TRACK{]}}
}

@article{ntdpa2006,
  author     = {Frost, Richard A. and Hafiz, Rahmatullah},
  title      = {A new top-down parsing algorithm to accommodate ambiguity and left recursion in polynomial time},
  year       = {2006},
  issue_date = {May 2006},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {41},
  number     = {5},
  issn       = {0362-1340},
  url        = {https://doi.org/10.1145/1149982.1149988},
  doi        = {10.1145/1149982.1149988},
  abstract   = {Top-down backtracking language processors are highly modular, can handle ambiguity, and are easy to implement with clear and maintainable code. However, a widely-held, and incorrect, view is that top-down processors are inherently exponential for ambiguous grammars and cannot accommodate left-recursive productions. It has been known for many years that exponential complexity can be avoided by memoization, and that left-recursive productions can be accommodated through a variety of techniques. However, until now, memoization and techniques for handling left recursion have either been presented independently, or else attempts at their integration have compromised modularity and clarity of the code.},
  journal    = {SIGPLAN Not.},
  month      = {may},
  pages      = {46–54},
  numpages   = {9},
  keywords   = {top-down parsing, parser combinators, memoization, left-recursion, backtracking}
}


@book{davies2012async,
  title     = {Async in C\# 5.0},
  author    = {Davies, Alex},
  year      = {2012},
  publisher = {" O'Reilly Media, Inc."}
}

@book{dahl1972car,
  title     = {CAR Hoare Hierarchical Program Structures In: Structured Programming (Dahl, Dijkstra, Hoare)},
  author    = {Dahl, OJ},
  year      = {1972},
  publisher = {Academic Press}
}

@online{python2019yield,
  author = {Python Software Foundation},
  title  = {The Python Language Reference - Yield expressions},
  year   = {2019},
  url    = {https://docs.python.org/3/reference/expressions.html#yieldexpr},
  note   = {[Accessed: 2019-11-22]}
}


@article{vaswani2017attention,
  title   = {Attention is all you need},
  author  = {Vaswani, Ashish and Shazeer, Noam and Parmar, Niki and Uszkoreit, Jakob and Jones, Llion and Gomez, Aidan N and Kaiser, {\L}ukasz and Polosukhin, Illia},
  journal = {Advances in neural information processing systems},
  volume  = {30},
  year    = {2017}
}

@article{fei2024moonbit,
  title     = {MoonBit: Explore the Design of an AI-Friendly Programming Language},
  author    = {Fei, Haoxiang and Zhang, Yu and Zhang, Hongbo and Wang, Yanlin and Liu, Qing},
  year      = {2024},
  booktitle = {International Conference on Software Engineering},
  url       = {https://www.moonbitlang.com/blog/moonbit-ai},
  note      = {Accessed: [2024-3-26]}
}